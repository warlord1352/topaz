name: build

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - release
      - canary
      - 'feature/**'

jobs:
  Linux_Build_Clang_64bit:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 0
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y software-properties-common cmake libmariadb-dev-compat libluajit-5.1-dev libzmq3-dev zlib1g-dev libssl-dev
    - name: Configure CMake
      run: |
        export CC=/usr/bin/clang
        export CXX=/usr/bin/clang++
        cmake .
    - name: Build
      run: |
        make -j $(nproc)

  Linux_Build_GCC_64bit:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 0
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y software-properties-common cmake libmariadb-dev-compat libluajit-5.1-dev libzmq3-dev zlib1g-dev libssl-dev
    - name: Configure CMake
      run: |
        export CC=/usr/bin/gcc
        export CXX=/usr/bin/g++
        CFLAGS=-m64 CXXFLAGS=-m64 LDFLAGS=-m64 cmake .
    - name: Build
      run: |
        make -j $(nproc)

  Windows_Build_2019_32bit:
    runs-on: windows-2019
    env:
      MSBUILD_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: Configure CMake
        shell: cmd
        # windows-2019 CI machine has MySQL installed, need to specific our location by hand
        run: |
          cmake -A Win32 . -DMYSQL_INCLUDE_DIR='%CD%/ext/include/mysql' -DMYSQL_LIBRARY='%CD%/ext/lib/libmariadb.lib'
      - name: Build
        shell: cmd
        run: |
          cmake --build .

  Windows_Build_2019_64bit:
    runs-on: windows-2019
    env:
      MSBUILD_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: Configure CMake
        shell: cmd
        # windows-2019 CI machine has MySQL installed, need to specific our location by hand
        run: |
          cmake -A x64 . -DMYSQL_INCLUDE_DIR='%CD%/ext/include/mysql' -DMYSQL_LIBRARY='%CD%/ext/lib64/libmariadb64.lib'
      - name: Build
        shell: cmd
        run: |
          cmake --build .

  Style_Checks:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 0
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y software-properties-common clang-format luajit-5.1-dev luarocks
    - name: Lua Checks
      run: |
        sh travis_lua.sh
    - name: Clang Format (C++ files)
      if: 'false' # Don't run until fixed
      run: |
        clang-format --version
        echo "Base Ref: ${{ github.event.pull_request.base.ref }}"
        echo "Base SHA: ${{ github.event.pull_request.base.sha }}"
        echo "Head Ref: ${{ github.event.pull_request.head.ref }}"
        echo "Head SHA: ${{ github.event.pull_request.head.sha }}"
        diff=`git diff -U0 --no-color ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} -- '*.cpp' '*.h' | clang-format-diff -p1`

        if [ -z "$diff" ]
        then
            echo "Diff formatting looks good!"
        else
            echo "Problem with formatting!"
            echo "To fix this locally, run: git diff -U0 --no-color ${{ github.event.pull_request.base.ref }}..HEAD -- '*.cpp' '*.h' | clang-format-diff -p1 -i"
            echo "Windows and Linux installation instructions for these tools are available here:"
            echo "https://github.com/project-topaz/topaz/wiki/Developer-Workflow"
            echo "" 
            echo "$diff" 

            exit -1
        fi

  Full_Startup_Checks:
    runs-on: ubuntu-20.04
    services:
      mysql:
        image: mariadb
        env:
          MYSQL_DATABASE: tpzdb
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=10s --health-retries=10
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 0
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y software-properties-common cmake mariadb-server-10.3 mariadb-client-10.3 libmariadb-dev-compat libluajit-5.1-dev libzmq3-dev zlib1g-dev libssl-dev luarocks python3.7
    - name: Configure CMake
      run: |
        cmake .
    - name: Build Binaies
      run: |
        make -j $(nproc)
    - name: Verify MySQL connection from container
      run: |
        mysql -h 127.0.0.1 -uroot -proot -e "SHOW DATABASES"
    - name: Import SQL files
      run: |
        for f in sql/*.sql; do
          echo -e "Importing $f into the database..."
          mysql tpzdb -h 127.0.0.1 -uroot -proot < $f
        done
        mysql tpzdb -h 127.0.0.1 -uroot -proot -e "SHOW tables"
    - name: Copy confs
      run: |
        cp conf/default/* conf/
    - name: Run services (2 mins)
      env:
        MYSQL_HOST: mysql
      run: |
        ls -l
        screen -d -m -S topaz_connect ./topaz_connect --log login-server.log
        screen -d -m -S topaz_game ./topaz_game --log map-server.log
        screen -d -m -S topaz_search ./topaz_search --log search-server.log
        sleep 2m
        killall screen
    - name: Check for errors
      run: |
        cat login-server.log
        cat map-server.log
        cat search-server.log

        if grep -qi "Error" login-server.log; then
            exit -1
        fi

        if grep -qi "Error" map-server.log; then
            exit -1
        fi

        if grep -qi "Error" search-server.log; then
            exit -1
        fi
